{"version":3,"sources":["app.js","directives/adminCrudDir.js","controllers/adminCtrl.js","controllers/mainCtrl.js","services/authService.js","services/materialSrv.js","services/sizeSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","directive","scope","dirData","$scope","materialSrv","sizeSrv","$interval","adminCtrlTest","materialSrvTest","sizeSrvTest","materialInfo","sectionTitle","createTitle","formID","inputField","id","placeholder","type","methods","create","cb","createNewMat","clearForm","document","getElementById","reset","focus","getList","getAllMats","then","listData","response","delete","deleteMat","existingTitle","optionPlaceholder","sizesInfo","showSizeControls","widthInput","createNewSize","getAllSizes","map","e","width","height","orientation","deleteSize","authService","mainCtrlTest","authServiceTest","String","prototype","makeUpperCase","uc","str","toLowerCase","split","wordSplit","tuc","splice","charAt","toUpperCase","join","logout","console","log","service","$http","get","window","location","href","messageResponse","one","data","unique","matList","forEach","alert","method","sort","a","b","typeA","typeB","obj","newSize","two","sizeList","concatData"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router'])\r\n    .config(($stateProvider, $urlRouterProvider) => {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n        .state('home', {\r\n            templateUrl: '../views/landing.html'\r\n            , url: '/'\r\n        })\r\n        .state('browse', {\r\n            templateUrl: '../views/browse.html'\r\n            , url: '/browse'\r\n        })\r\n        .state('orders', {\r\n            templateUrl: '../views/orderHistory.html'\r\n            , url: '/orders'\r\n        })\r\n        .state('cart', {\r\n            templateUrl: '../views/cart.html'\r\n            , url: '/cart'\r\n        })\r\n        .state('checkout', {\r\n            templateUrl: '../views/checkout.html'\r\n            , url: '/checkout'\r\n        })\r\n        .state('confirmation', {\r\n            templateUrl: '../views/confirmation.html'\r\n            , url: '/confirmation'\r\n        })\r\n        .state('admin', {\r\n            templateUrl: '../views/admin.html'\r\n            , url: '/admin'\r\n            , controller: 'adminCtrl'\r\n        })\r\n    })","angular.module('app').directive('adminCrudDir', function () {\r\n    return {\r\n        scope: {\r\n            dirData: '='\r\n        }\r\n        , templateUrl: '../../views/adminCrud.html'\r\n    }\r\n})","angular.module('app').controller('adminCtrl', function ($scope, materialSrv, sizeSrv, $interval) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.adminCtrlTest = 'adminCtrl controller is connected and operational'\r\n    $scope.materialSrvTest = materialSrv.materialSrvTest\r\n    $scope.sizeSrvTest = sizeSrv.sizeSrvTest\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              VARIABLES               ║\r\n    //      ╚══════════════════════════════════════╝\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                Magic                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    // .....║ Material logic\r\n    $scope.materialInfo = {\r\n        sectionTitle: 'Materials'\r\n        , createTitle: 'Create New Material'\r\n        , formID: 'create-materials-form'\r\n        , inputField: {\r\n            id: \"mat-type\"\r\n            , placeholder: \"Canvas, Parchment, Poster Paper...\"\r\n            , type: \"input\"\r\n        }\r\n        , methods: {\r\n            create: (type, cb) => {\r\n                materialSrv.createNewMat(type), cb(type)\r\n            }\r\n            , clearForm: type => {\r\n                document.getElementById($scope.materialInfo.formID).reset()\r\n                document.getElementById($scope.materialInfo.inputField.id).focus()\r\n                $interval(_ => {\r\n                    $scope.materialInfo.methods.getList()\r\n                }, 500, 1)\r\n            }\r\n            , getList: _ => materialSrv.getAllMats().then(response => $scope.materialInfo.listData = response)\r\n            , delete: id => materialSrv.deleteMat(id, $scope.materialInfo.methods.getList)\r\n        }\r\n        , existingTitle: \"Existing Materials\"\r\n        , optionPlaceholder: 'choose material'\r\n    }\r\n    $scope.materialInfo.methods.getList()\r\n\r\n    // .....║ Sizes logic\r\n    $scope.sizesInfo = {\r\n        sectionTitle: 'Sizes'\r\n        , createTitle: 'Create New Size'\r\n        , formID: 'create-size-form'\r\n        , inputField: {\r\n            id: \"size-height\"\r\n            , placeholder: \"height in inches\"\r\n            , type: \"number\"\r\n        }\r\n        , showSizeControls: true\r\n        , widthInput: {\r\n            id: \"size-width\"\r\n            , placeholder: \"width in inches\"\r\n            , type: \"number\"\r\n        }\r\n        , methods: {\r\n            create: (type, cb) => {\r\n                sizeSrv.createNewSize(type), cb(type)\r\n            }\r\n            , clearForm: type => {\r\n                document.getElementById($scope.sizesInfo.formID).reset()\r\n                document.getElementById($scope.sizesInfo.widthInput.id).focus()\r\n                $interval(_ => {\r\n                    $scope.sizesInfo.methods.getList()\r\n                }, 500, 1)\r\n            }\r\n            , getList: _ => sizeSrv.getAllSizes().then(response => {\r\n                $scope.sizesInfo.listData = response.map(e => {\r\n                    e.type = `${e.width}in. x ${e.height}in. (${e.orientation})`\r\n                    return e\r\n                })\r\n            })\r\n            , delete: id => sizeSrv.deleteSize(id, $scope.sizesInfo.methods.getList)\r\n        }\r\n        , existingTitle: \"Existing Sizes\"\r\n        , optionPlaceholder: 'choose size'\r\n    }\r\n    $scope.sizesInfo.methods.getList()\r\n\r\n    // .....║ Item logic\r\n})","angular.module('app').controller('mainCtrl', function ($scope, authService) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.mainCtrlTest = 'mainCtrl controller is connected and operational'\r\n    $scope.authServiceTest = authService.authServiceTest\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              VARIABLES               ║\r\n    //      ╚══════════════════════════════════════╝\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║            HELPER METHODS            ║\r\n    //      ╚══════════════════════════════════════╝\r\n    String.prototype.makeUpperCase = str => {\r\n        let uc = str.toLowerCase().split(' ').map(e => {\r\n            let wordSplit = e.split(''), tuc = wordSplit.splice(0, 1, e.charAt(0).toUpperCase())\r\n            return wordSplit.join('')\r\n        })\r\n        return uc.join(' ')\r\n    }\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                Magic                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.logout = _ => {\r\n        console.log(`clicked`)\r\n        authService.logout()\r\n    }\r\n\r\n})","angular.module('app').service('authService', function ($http) {\r\n//      ╔══════════════════════════════════════╗\r\n//      ║                TESTS                 ║\r\n//      ╚══════════════════════════════════════╝\r\n    this.authServiceTest = 'the authService is connected'\r\n\r\n//      ╔══════════════════════════════════════╗\r\n//      ║              END POINTS              ║\r\n//      ╚══════════════════════════════════════╝\r\n    this.logout = () => $http.get('/api/auth/logout').then(response => window.location.href = '/')\r\n})","angular.module('app').service('materialSrv', function ($http) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.materialSrvTest = 'the materialSrv is connected'\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              Variables               ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.messageResponse = null\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              END POINTS              ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.createNewMat = (type) => {\r\n        type = type.one\r\n        let data = { \"type\": type.makeUpperCase(type) }, unique = true\r\n        this.matList.data.forEach(e => {\r\n            if (data.type === e.type) {\r\n                unique = false\r\n                return alert(`Material \"${e.type}\" already exists!`)\r\n            }\r\n        })\r\n        if (unique === true) {\r\n            $http({\r\n                url: '/api/mats',\r\n                method: 'POST',\r\n                data: data\r\n            }).then(response => {\r\n                this.messageResponse = response.data\r\n                alert(response.data)\r\n            })\r\n        }\r\n    }\r\n\r\n    this.getAllMats = _ => $http.get('/api/mats').then(response => {\r\n        this.matList = response\r\n        return response.data.sort((a, b) => {\r\n            let typeA = a.type.toUpperCase()\r\n            let typeB = b.type.toUpperCase()\r\n            if (typeA < typeB) {\r\n              return -1;\r\n            }\r\n            if (typeA > typeB) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n        })\r\n    })\r\n\r\n    this.deleteMat = (id, cb) => {\r\n        $http({\r\n            url: '/api/mats/' + id,\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            this.messageResponse = response.data\r\n            alert(response.data)\r\n            cb()\r\n        })\r\n    }\r\n})","angular.module('app').service('sizeSrv', function ($http) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.sizeSrvTest = 'the sizeSrv is connected'\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              Variables               ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.messageResponse = null\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              END POINTS              ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.createNewSize = (obj) => {\r\n        let newSize = {}, unique = true\r\n        if (obj.two > obj.one) {\r\n            newSize.width = obj.two\r\n            newSize.height = obj.one\r\n            newSize.type = \"Landscape\"\r\n        }\r\n        else if (obj.two < obj.one) {\r\n            newSize.width = obj.two\r\n            newSize.height = obj.one\r\n            newSize.type = \"Portrait\"\r\n        }\r\n        else {\r\n            newSize.width = obj.two\r\n            newSize.height = obj.one\r\n            newSize.type = \"Square\"\r\n        }\r\n        console.log(\"type for backend \", newSize)\r\n        this.sizeList.data.forEach(e => {\r\n            // console.log('this is e: ', e)\r\n            // console.log('this is newSize: ', newSize)\r\n            if (newSize.type === e.orientation && newSize.width === e.width && newSize.height === e.height) {\r\n                unique = false\r\n                return alert(`Size with demensions: ${e.width}in. x ${e.height}in. (${e.orientation}) already exists!`)\r\n            }\r\n        })\r\n        if (unique === true) {\r\n            console.log('it is unique!')\r\n            $http({\r\n                url: '/api/sizes',\r\n                method: 'POST',\r\n                data: newSize\r\n            }).then(response => {\r\n                this.messageResponse = response.data\r\n                alert(response.data)\r\n            })\r\n        }\r\n    }\r\n\r\n    this.getAllSizes = _ => $http.get('/api/sizes').then(response => {\r\n        this.sizeList = response\r\n        let concatData = response.data.map(e => {\r\n            e.width = e.width / 1\r\n            e.height = e.height / 1\r\n            e.width > e.height ? e.orientation = \"Landscape\" : e.orientation = \"Portrait\"\r\n            e.width === e.height ? e.orientation = \"Square\" : null\r\n            return e\r\n        })\r\n        return concatData.sort((a, b) => {\r\n            let typeA = a.width\r\n            let typeB = b.width\r\n            if (typeA < typeB) {\r\n                return -1;\r\n            }\r\n            if (typeA > typeB) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n    })\r\n\r\n    this.deleteSize = (id, cb) => {\r\n        $http({\r\n            url: '/api/sizes/' + id,\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            this.messageResponse = response.data\r\n            alert(response.data)\r\n            cb()\r\n        })\r\n    }\r\n})"]}