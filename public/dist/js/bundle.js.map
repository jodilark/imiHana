{"version":3,"sources":["app.js","controllers/adminCtrl.js","controllers/mainCtrl.js","services/authService.js","services/materialSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","materialSrv","$interval","adminCtrlTest","materialSrvTest","createMat","type","cb","createNewMat","clearMatForm","document","getElementById","reset","matType","focus","console","log","messageResponse","authService","mainCtrlTest","authServiceTest","String","prototype","makeUpperCase","uc","str","toLowerCase","split","map","wordSplit","e","tuc","splice","charAt","toUpperCase","join","logout","service","$http","get","then","window","location","href","data","method","response","alert"],"mappings":";;AAAAA,QAAQC,MAAR,CAAe,KAAf,EAAsB,CAAC,WAAD,CAAtB,EACKC,MADL,CACY,UAACC,cAAD,EAAiBC,kBAAjB,EAAwC;AAC5CA,uBAAmBC,SAAnB,CAA6B,GAA7B,EAAkC,EAAlC;AACAF,mBACCG,KADD,CACO,MADP,EACe;AACXC,qBAAa,uBADF;AAETC,aAAK;AAFI,KADf,EAKCF,KALD,CAKO,QALP,EAKiB;AACbC,qBAAa,sBADA;AAEXC,aAAK;AAFM,KALjB,EASCF,KATD,CASO,QATP,EASiB;AACbC,qBAAa,4BADA;AAEXC,aAAK;AAFM,KATjB,EAaCF,KAbD,CAaO,MAbP,EAae;AACXC,qBAAa,oBADF;AAETC,aAAK;AAFI,KAbf,EAiBCF,KAjBD,CAiBO,UAjBP,EAiBmB;AACfC,qBAAa,wBADE;AAEbC,aAAK;AAFQ,KAjBnB,EAqBCF,KArBD,CAqBO,cArBP,EAqBuB;AACnBC,qBAAa,4BADM;AAEjBC,aAAK;AAFY,KArBvB,EAyBCF,KAzBD,CAyBO,OAzBP,EAyBgB;AACZC,qBAAa,qBADD;AAEVC,aAAK,QAFK;AAGVC,oBAAY;AAHF,KAzBhB;AA8BH,CAjCL;;;ACAAT,QAAQC,MAAR,CAAe,KAAf,EAAsBQ,UAAtB,CAAiC,WAAjC,EAA8C,UAAUC,MAAV,EAAkBC,WAAlB,EAA+BC,SAA/B,EAA0C;AACpF;AACA;AACA;AACAF,WAAOG,aAAP,GAAuB,mDAAvB;AACAH,WAAOI,eAAP,GAAyBH,YAAYG,eAArC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAJ,WAAOK,SAAP,GAAmB,UAACC,IAAD,EAAOC,EAAP,EAAc;AAAEN,oBAAYO,YAAZ,CAAyBF,IAAzB,GAAgCC,GAAGD,IAAH,CAAhC;AAA0C,KAA7E;;AAEAN,WAAOS,YAAP,GAAsB,gBAAQ;AAC1BC,iBAASC,cAAT,CAAwB,uBAAxB,EAAiDC,KAAjD;AACAZ,eAAOa,OAAP,GAAiB,EAAjB;AACAH,iBAASC,cAAT,CAAwB,UAAxB,EAAoCG,KAApC;AACAZ,kBAAU,aAAK;AACXa,oBAAQC,GAAR,CAAYf,YAAYgB,eAAxB;AACH,SAFD,EAEG,GAFH,EAEQ,EAFR;AAGH,KAPD;AAQH,CAzBD;;;ACAA3B,QAAQC,MAAR,CAAe,KAAf,EAAsBQ,UAAtB,CAAiC,UAAjC,EAA6C,UAAUC,MAAV,EAAkBkB,WAAlB,EAA+B;AACxE;AACA;AACA;AACAlB,WAAOmB,YAAP,GAAsB,kDAAtB;AACAnB,WAAOoB,eAAP,GAAyBF,YAAYE,eAArC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACAC,WAAOC,SAAP,CAAiBC,aAAjB,GAAiC,eAAO;AACpC,YAAIC,KAAKC,IAAIC,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,CAAiC,aAAK;AAC3C,gBAAIC,YAAYC,EAAEH,KAAF,CAAQ,EAAR,CAAhB;AAAA,gBAA6BI,MAAMF,UAAUG,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuBF,EAAEG,MAAF,CAAS,CAAT,EAAYC,WAAZ,EAAvB,CAAnC;AACA,mBAAOL,UAAUM,IAAV,CAAe,EAAf,CAAP;AACH,SAHQ,CAAT;AAIA,eAAOX,GAAGW,IAAH,CAAQ,GAAR,CAAP;AACH,KAND;;AAQA;AACA;AACA;AACAnC,WAAOoC,MAAP,GAAgB,aAAK;AACjBrB,gBAAQC,GAAR;AACAE,oBAAYkB,MAAZ;AACH,KAHD;AAKH,CA9BD;;;ACAA9C,QAAQC,MAAR,CAAe,KAAf,EAAsB8C,OAAtB,CAA8B,aAA9B,EAA6C,UAAUC,KAAV,EAAiB;AAC9D;AACA;AACA;AACI,SAAKlB,eAAL,GAAuB,8BAAvB;;AAEJ;AACA;AACA;AACI,SAAKgB,MAAL,GAAc;AAAA,eAAME,MAAMC,GAAN,CAAU,kBAAV,EAA8BC,IAA9B,CAAmC;AAAA,mBAAYC,OAAOC,QAAP,CAAgBC,IAAhB,GAAuB,GAAnC;AAAA,SAAnC,CAAN;AAAA,KAAd;AACH,CAVD;;;ACAArD,QAAQC,MAAR,CAAe,KAAf,EAAsB8C,OAAtB,CAA8B,aAA9B,EAA6C,UAAUC,KAAV,EAAiB;AAAA;;AAC1D;AACA;AACA;AACI,SAAKlC,eAAL,GAAuB,8BAAvB;;AAEJ;AACA;AACA;AACI,SAAKa,eAAL,GAAuB,IAAvB;AACJ;AACA;AACA;AACI,SAAKT,YAAL,GAAoB,UAACF,IAAD,EAAU;AAC1B;AACA,YAAIsC,OAAO,EAAC,QAAQtC,KAAKiB,aAAL,CAAmBjB,IAAnB,CAAT,EAAX;AACAgC,cAAM;AACFxC,iBAAK,WADH;AAEF+C,oBAAQ,MAFN;AAGFD,kBAAMA;AAHJ,SAAN,EAIGJ,IAJH,CAIQ,oBAAY;AAChB,kBAAKvB,eAAL,GAAuB6B,SAASF,IAAhC;AACAG,kBAAMD,SAASF,IAAf;AACH,SAPD;AAQH,KAXD;AAYH,CAzBL","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router'])\r\n    .config(($stateProvider, $urlRouterProvider) => {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n        .state('home', {\r\n            templateUrl: '../views/landing.html'\r\n            , url: '/'\r\n        })\r\n        .state('browse', {\r\n            templateUrl: '../views/browse.html'\r\n            , url: '/browse'\r\n        })\r\n        .state('orders', {\r\n            templateUrl: '../views/orderHistory.html'\r\n            , url: '/orders'\r\n        })\r\n        .state('cart', {\r\n            templateUrl: '../views/cart.html'\r\n            , url: '/cart'\r\n        })\r\n        .state('checkout', {\r\n            templateUrl: '../views/checkout.html'\r\n            , url: '/checkout'\r\n        })\r\n        .state('confirmation', {\r\n            templateUrl: '../views/confirmation.html'\r\n            , url: '/confirmation'\r\n        })\r\n        .state('admin', {\r\n            templateUrl: '../views/admin.html'\r\n            , url: '/admin'\r\n            , controller: 'adminCtrl'\r\n        })\r\n    })","angular.module('app').controller('adminCtrl', function ($scope, materialSrv, $interval) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.adminCtrlTest = 'adminCtrl controller is connected and operational'\r\n    $scope.materialSrvTest = materialSrv.materialSrvTest\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              VARIABLES               ║\r\n    //      ╚══════════════════════════════════════╝\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                Magic                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    // .....║ Material logic\r\n    $scope.createMat = (type, cb) => { materialSrv.createNewMat(type), cb(type) }\r\n\r\n    $scope.clearMatForm = type => {\r\n        document.getElementById(\"create-materials-form\").reset()\r\n        $scope.matType = \"\"\r\n        document.getElementById(\"mat-type\").focus()\r\n        $interval(_ => {\r\n            console.log(materialSrv.messageResponse)\r\n        }, 800, 10)\r\n    }\r\n})","angular.module('app').controller('mainCtrl', function ($scope, authService) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.mainCtrlTest = 'mainCtrl controller is connected and operational'\r\n    $scope.authServiceTest = authService.authServiceTest\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              VARIABLES               ║\r\n    //      ╚══════════════════════════════════════╝\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║            HELPER METHODS            ║\r\n    //      ╚══════════════════════════════════════╝\r\n    String.prototype.makeUpperCase = str => {\r\n        let uc = str.toLowerCase().split(' ').map(e => {\r\n            let wordSplit = e.split(''), tuc = wordSplit.splice(0, 1, e.charAt(0).toUpperCase())\r\n            return wordSplit.join('')\r\n        })\r\n        return uc.join(' ')\r\n    }\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                Magic                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.logout = _ => {\r\n        console.log(`clicked`)\r\n        authService.logout()\r\n    }\r\n\r\n})","angular.module('app').service('authService', function ($http) {\r\n//      ╔══════════════════════════════════════╗\r\n//      ║                TESTS                 ║\r\n//      ╚══════════════════════════════════════╝\r\n    this.authServiceTest = 'the authService is connected'\r\n\r\n//      ╔══════════════════════════════════════╗\r\n//      ║              END POINTS              ║\r\n//      ╚══════════════════════════════════════╝\r\n    this.logout = () => $http.get('/api/auth/logout').then(response => window.location.href = '/')\r\n})","angular.module('app').service('materialSrv', function ($http) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n        this.materialSrvTest = 'the materialSrv is connected'\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              Variables               ║\r\n    //      ╚══════════════════════════════════════╝\r\n        this.messageResponse = null\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              END POINTS              ║\r\n    //      ╚══════════════════════════════════════╝\r\n        this.createNewMat = (type) => {\r\n            // this.isTrueLuck = 'not any luck at all'\r\n            let data = {\"type\": type.makeUpperCase(type)}\r\n            $http({\r\n                url: '/api/mats',\r\n                method: 'POST',\r\n                data: data\r\n            }).then(response => {\r\n                this.messageResponse = response.data\r\n                alert(response.data)\r\n            })\r\n        }\r\n    })"]}