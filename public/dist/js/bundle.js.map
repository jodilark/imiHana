{"version":3,"sources":["app.js","controllers/adminCtrl.js","controllers/browseCtrl.js","controllers/itemDetailsCtrl.js","controllers/mainCtrl.js","directives/adminCrudDir.js","services/authService.js","services/cartSrv.js","services/itemSrv.js","services/materialSrv.js","services/sizeSrv.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","templateUrl","url","controller","$scope","materialSrv","sizeSrv","itemSrv","$interval","Upload","$window","adminCtrlTest","materialSrvTest","sizeSrvTest","vm","materialInfo","sectionTitle","createTitle","formID","inputField","id","placeholder","type","methods","create","cb","createNewMat","clearForm","document","getElementById","reset","focus","getList","getAllMats","then","listData","response","delete","deleteMat","existingTitle","optionPlaceholder","sizesInfo","showSizeControls","widthInput","createNewSize","getAllSizes","map","e","width","height","orientation","deleteSize","itemInfo","inputFields","console","log","name","description","price","forSale","file","getAllItems","data","deleteItem","submit","upload_form","$valid","upload","item","newImg","newResponse","alert","originalName","cartSrv","browseTest","browse","addToCart","obj","$stateParams","itemDetail","getProdDetails","myID","myItem","authService","mainCtrlTest","authServiceTest","String","prototype","makeUpperCase","uc","str","toLowerCase","split","wordSplit","tuc","splice","charAt","toUpperCase","join","getUser","user","isAdmin","admin","logout","directive","scope","dirData","service","$http","get","window","location","href","cart","unique","exists","filter","qty","push","serviceTest","resp","error_code","status","method","messageResponse","one","matList","forEach","sort","a","b","typeA","typeB","newSize","two","sizeList","concatData"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router', 'ngFileUpload'])\r\n    .config(($stateProvider, $urlRouterProvider) => {\r\n        $urlRouterProvider.otherwise('/', \"\")\r\n        $stateProvider\r\n        .state('home', {\r\n            templateUrl: '../views/landing.html'\r\n            , url: '/'\r\n        })\r\n        .state('browse', {\r\n            templateUrl: '../views/browse.html'\r\n            , url: '/browse'\r\n            , controller: 'browseCtrl'\r\n        })\r\n        .state('orders', {\r\n            templateUrl: '../views/orderHistory.html'\r\n            , url: '/orders'\r\n        })\r\n        .state('cart', {\r\n            templateUrl: '../views/cart.html'\r\n            , url: '/cart'\r\n        })\r\n        .state('checkout', {\r\n            templateUrl: '../views/checkout.html'\r\n            , url: '/checkout'\r\n        })\r\n        .state('confirmation', {\r\n            templateUrl: '../views/confirmation.html'\r\n            , url: '/confirmation'\r\n        })\r\n        .state('admin', {\r\n            templateUrl: '../views/admin.html'\r\n            , url: '/admin'\r\n            , controller: 'adminCtrl as up'\r\n        })\r\n        .state('details', {\r\n            templateUrl: '../views/itemDetails.html'\r\n            , url: '/details/:id'\r\n            , controller: 'itemDetailsCtrl'\r\n        })\r\n    })","angular.module('app').controller('adminCtrl', function ($scope, materialSrv, sizeSrv, itemSrv, $interval, Upload, $window) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.adminCtrlTest = 'adminCtrl controller is connected and operational'\r\n    $scope.materialSrvTest = materialSrv.materialSrvTest\r\n    $scope.sizeSrvTest = sizeSrv.sizeSrvTest\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              VARIABLES               ║\r\n    //      ╚══════════════════════════════════════╝\r\n    var vm = this;\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                Magic                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    // .....║ Material logic\r\n    $scope.materialInfo = {\r\n        sectionTitle: 'Materials'\r\n        , createTitle: 'Create New Material'\r\n        , formID: 'create-materials-form'\r\n        , inputField: {\r\n            id: \"mat-type\"\r\n            , placeholder: \"Canvas, Parchment, Poster Paper...\"\r\n            , type: \"input\"\r\n        }\r\n        , methods: {\r\n            create: (type, cb) => {\r\n                materialSrv.createNewMat(type), cb(type)\r\n            }\r\n            , clearForm: type => {\r\n                document.getElementById($scope.materialInfo.formID).reset()\r\n                document.getElementById($scope.materialInfo.inputField.id).focus()\r\n                $interval(_ => {\r\n                    $scope.materialInfo.methods.getList()\r\n                }, 500, 1)\r\n            }\r\n            , getList: _ => materialSrv.getAllMats().then(response => $scope.materialInfo.listData = response)\r\n            , delete: id => materialSrv.deleteMat(id, $scope.materialInfo.methods.getList)\r\n        }\r\n        , existingTitle: \"Existing Materials\"\r\n        , optionPlaceholder: 'choose material'\r\n    }\r\n    $scope.materialInfo.methods.getList()\r\n\r\n    // .....║ Sizes logic\r\n    $scope.sizesInfo = {\r\n        sectionTitle: 'Sizes'\r\n        , createTitle: 'Create New Size'\r\n        , formID: 'create-size-form'\r\n        , inputField: {\r\n            id: \"size-height\"\r\n            , placeholder: \"height in inches\"\r\n            , type: \"number\"\r\n        }\r\n        , showSizeControls: true\r\n        , widthInput: {\r\n            id: \"size-width\"\r\n            , placeholder: \"width in inches\"\r\n            , type: \"number\"\r\n        }\r\n        , methods: {\r\n            create: (type, cb) => {\r\n                sizeSrv.createNewSize(type), cb(type)\r\n            }\r\n            , clearForm: type => {\r\n                document.getElementById($scope.sizesInfo.formID).reset()\r\n                document.getElementById($scope.sizesInfo.widthInput.id).focus()\r\n                $interval(_ => {\r\n                    $scope.sizesInfo.methods.getList()\r\n                }, 500, 1)\r\n            }\r\n            , getList: _ => sizeSrv.getAllSizes().then(response => {\r\n                $scope.sizesInfo.listData = response.map(e => {\r\n                    e.type = `${e.width}in. x ${e.height}in. (${e.orientation})`\r\n                    return e\r\n                })\r\n            })\r\n            , delete: id => sizeSrv.deleteSize(id, $scope.sizesInfo.methods.getList)\r\n        }\r\n        , existingTitle: \"Existing Sizes\"\r\n        , optionPlaceholder: 'choose size'\r\n    }\r\n    $scope.sizesInfo.methods.getList()\r\n\r\n    // .....║ Item logic\r\n    $scope.itemInfo = {\r\n        sectionTitle: 'Items'\r\n        , createTitle: 'Create New Item'\r\n        , existingTitle: 'Existing Items'\r\n        , optionPlaceholder: 'choose an item'\r\n        , formID: 'create-item-form'\r\n        , inputFields: [\r\n            {\r\n                id: \"item-form-name\"\r\n                , placeholder: \"name\"\r\n                , type: \"text\"\r\n            },\r\n            {\r\n                id: \"item-form-description\"\r\n                , placeholder: \"description\"\r\n                , type: \"text\"\r\n            },\r\n            {\r\n                id: \"item-form-price\"\r\n                , placeholder: \"price\"\r\n                , type: \"number\"\r\n            },\r\n            {\r\n                id: \"item-form-forSale\"\r\n                , placeholder: \"For Sale\"\r\n                , type: \"checkbox\"\r\n            },\r\n            {\r\n                id: \"item-form-url\"\r\n                , placeholder: \"image url\"\r\n                , type: \"text\"\r\n            },\r\n            {\r\n                id: \"item-form-localFile\"\r\n                , placeholder: \"description\"\r\n                , type: \"file\"\r\n            }\r\n        ]\r\n        , methods: {\r\n            clearForm: type => {\r\n                console.log('clear item form was fired')\r\n                // console.log('type was: ', type)\r\n                document.getElementById($scope.itemInfo.formID).reset()\r\n                document.getElementById(\"item-form-name\").focus()\r\n                vm.name = null, vm.description = null, vm.price = null, vm.forSale = null, vm.file = null\r\n                $interval(_ => {\r\n                    $scope.itemInfo.methods.getList()\r\n                }, 500, 1)\r\n            }\r\n            , getList: _ => itemSrv.getAllItems().then(response => {\r\n                $scope.itemInfo.listData = response.data.map(e => {\r\n                    return e\r\n                })\r\n            })\r\n            , delete: id => itemSrv.deleteItem(id, $scope.itemInfo.methods.getList)\r\n        }\r\n    }\r\n    $scope.itemInfo.methods.getList()\r\n\r\n    vm.submit = function(){ //function to call on form submit\r\n        console.log(vm.file)\r\n        if (vm.upload_form.file.$valid && vm.file) { //check if from is valid\r\n            itemSrv.upload(vm.file).then(response => {\r\n                //now send the other form data including the returned url\r\n                itemSrv.item({\"name\": vm.name, \"description\": vm.description, \"price\": vm.price, \"forSale\": vm.forSale, \"imageUrl\": response.url}).then(newResponse => {\r\n                    $scope.newImg = newResponse.data.url\r\n                    $scope.itemInfo.methods.clearForm()\r\n                    alert(`${response.originalName} was successfully uploaded!`)\r\n                })\r\n            }); //call upload function\r\n        }        \r\n    }\r\n})","angular.module('app').controller('browseCtrl', function ($scope, itemSrv, cartSrv) {\r\n    $scope.browseTest = \"browseController is hooked up\"\r\n\r\n    $scope.browse = {\r\n        methods: {\r\n            getList: _ => itemSrv.getAllItems().then(response => {\r\n                $scope.browse.listData = response.data\r\n            })\r\n            , addToCart: obj => {\r\n                cartSrv.addToCart(obj)\r\n            }\r\n        }\r\n    }\r\n    $scope.browse.methods.getList()\r\n\r\n})","angular.module(\"app\").controller(\"itemDetailsCtrl\", function ($scope, itemSrv, cartSrv, $stateParams) {\r\n    $scope.itemDetail = myID => {\r\n        itemSrv.getProdDetails(myID).then(response => {\r\n            $scope.myItem = response.data[0]\r\n        })\r\n    }\r\n    $scope.itemDetail($stateParams.id)\r\n\r\n    $scope.addToCart = obj => {\r\n        cartSrv.addToCart(obj)\r\n    }\r\n});","angular.module('app').controller('mainCtrl', function ($scope, authService) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.mainCtrlTest = 'mainCtrl controller is connected and operational'\r\n    $scope.authServiceTest = authService.authServiceTest\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              VARIABLES               ║\r\n    //      ╚══════════════════════════════════════╝\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║            HELPER METHODS            ║\r\n    //      ╚══════════════════════════════════════╝\r\n    String.prototype.makeUpperCase = str => {\r\n        let uc = str.toLowerCase().split(' ').map(e => {\r\n            let wordSplit = e.split(''), tuc = wordSplit.splice(0, 1, e.charAt(0).toUpperCase())\r\n            return wordSplit.join('')\r\n        })\r\n        return uc.join(' ')\r\n    }\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                Magic                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    $scope.getUser = _ => authService.user().then(response => {\r\n        console.log(response)\r\n        $scope.isAdmin = response.admin\r\n    })\r\n\r\n    $scope.logout = _ => {\r\n        console.log(`clicked`)\r\n        authService.logout()\r\n    }\r\n\r\n})","angular.module('app').directive('adminCrudDir', function () {\r\n    return {\r\n        scope: {\r\n            dirData: '='\r\n        }\r\n        , templateUrl: '../../views/adminCrud.html'\r\n    }\r\n})","angular.module('app').service('authService', function ($http) {\r\n//      ╔══════════════════════════════════════╗\r\n//      ║                TESTS                 ║\r\n//      ╚══════════════════════════════════════╝\r\n    this.authServiceTest = 'the authService is connected'\r\n\r\n//      ╔══════════════════════════════════════╗\r\n//      ║              END POINTS              ║\r\n//      ╚══════════════════════════════════════╝\r\n    this.user = _ => $http.get('/api/thisUser').then(response => {\r\n        return response.data\r\n    })\r\n    this.logout = () => $http.get('/api/auth/logout').then(response => window.location.href = '/')\r\n})","angular.module('app').service('cartSrv', function ($http) {\r\n    var vm = this\r\n    vm.cart = []\r\n\r\n    vm.addToCart = obj => {\r\n        let unique = true\r\n        let exists = vm.cart.filter(e => {\r\n            if (e.id === obj.id) {\r\n                console.log(\"already in cart!!!\")\r\n                unique = false\r\n                e.qty = e.qty + 1\r\n            }\r\n        })\r\n        if (unique === true) {\r\n            obj.qty = 1\r\n            vm.cart.push(obj)\r\n        }\r\n        console.log(\"Cart: \", vm.cart)\r\n    }\r\n})","angular.module('app').service('itemSrv', function ($http, Upload, $window) {\r\n    this.serviceTest = 'service is connected'\r\n\r\n    var vm = this\r\n\r\n    vm.upload = file => {\r\n        return Upload.upload({\r\n            url: '/upload', //webAPI exposed to upload the file\r\n            data: { file: file } //pass file as data, should be user ng-model\r\n        }).then(resp => { //upload function returns a promise\r\n            if (resp.data.error_code === 0) { //validate success\r\n                // $window.alert(`Success! ${resp.config.data.file.name} was uploaded successfully and can be accessed here: ${resp.data.url}`);\r\n                return { originalName: resp.config.data.file.name, url: resp.data.url }\r\n            } else {\r\n                $window.alert('an error occurred');\r\n            }\r\n        }, resp => { //catch error\r\n            console.log('Error status: ' + resp.status);\r\n            $window.alert('Error status: ' + resp.status);\r\n        });\r\n    };\r\n    vm.item = obj => {\r\n        console.log(obj)\r\n        return $http({\r\n            url: '/api/items'\r\n            , method: 'POST'\r\n            , data: obj\r\n        }).then(response => {\r\n            console.log(\"success from server: \", response)\r\n            return response\r\n        })\r\n    }\r\n\r\n    vm.getAllItems = _ => {\r\n        return $http({\r\n            url: '/api/items'\r\n            , method: 'GET'\r\n        }).then(response => {\r\n            return response\r\n        })\r\n    }\r\n\r\n    vm.getProdDetails = id => {\r\n        return $http.get('/api/items/' + id)\r\n    }\r\n\r\n    vm.deleteItem = (id, cb) => {\r\n        return $http({\r\n            url: '/api/items/' + id\r\n            , method: 'DELETE'\r\n        }).then(response => {\r\n            alert(response.data)\r\n            cb()\r\n        })\r\n    }\r\n})","angular.module('app').service('materialSrv', function ($http) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.materialSrvTest = 'the materialSrv is connected'\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              Variables               ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.messageResponse = null\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              END POINTS              ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.createNewMat = (type) => {\r\n        type = type.one\r\n        let data = { \"type\": type.makeUpperCase(type) }, unique = true\r\n        this.matList.data.forEach(e => {\r\n            if (data.type === e.type) {\r\n                unique = false\r\n                return alert(`Material \"${e.type}\" already exists!`)\r\n            }\r\n        })\r\n        if (unique === true) {\r\n            $http({\r\n                url: '/api/mats',\r\n                method: 'POST',\r\n                data: data\r\n            }).then(response => {\r\n                this.messageResponse = response.data\r\n                alert(response.data)\r\n            })\r\n        }\r\n    }\r\n\r\n    this.getAllMats = _ => $http.get('/api/mats').then(response => {\r\n        this.matList = response\r\n        return response.data.sort((a, b) => {\r\n            let typeA = a.type.toUpperCase()\r\n            let typeB = b.type.toUpperCase()\r\n            if (typeA < typeB) {\r\n              return -1;\r\n            }\r\n            if (typeA > typeB) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n        })\r\n    })\r\n\r\n    this.deleteMat = (id, cb) => {\r\n        $http({\r\n            url: '/api/mats/' + id,\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            this.messageResponse = response.data\r\n            alert(response.data)\r\n            cb()\r\n        })\r\n    }\r\n})","angular.module('app').service('sizeSrv', function ($http) {\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║                TESTS                 ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.sizeSrvTest = 'the sizeSrv is connected'\r\n\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              Variables               ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.messageResponse = null\r\n    //      ╔══════════════════════════════════════╗\r\n    //      ║              END POINTS              ║\r\n    //      ╚══════════════════════════════════════╝\r\n    this.createNewSize = (obj) => {\r\n        let newSize = {}, unique = true\r\n        if (obj.two > obj.one) {\r\n            newSize.width = obj.two\r\n            newSize.height = obj.one\r\n            newSize.type = \"Landscape\"\r\n        }\r\n        else if (obj.two < obj.one) {\r\n            newSize.width = obj.two\r\n            newSize.height = obj.one\r\n            newSize.type = \"Portrait\"\r\n        }\r\n        else {\r\n            newSize.width = obj.two\r\n            newSize.height = obj.one\r\n            newSize.type = \"Square\"\r\n        }\r\n        console.log(\"type for backend \", newSize)\r\n        this.sizeList.data.forEach(e => {\r\n            // console.log('this is e: ', e)\r\n            // console.log('this is newSize: ', newSize)\r\n            if (newSize.type === e.orientation && newSize.width === e.width && newSize.height === e.height) {\r\n                unique = false\r\n                return alert(`Size with demensions: ${e.width}in. x ${e.height}in. (${e.orientation}) already exists!`)\r\n            }\r\n        })\r\n        if (unique === true) {\r\n            console.log('it is unique!')\r\n            $http({\r\n                url: '/api/sizes',\r\n                method: 'POST',\r\n                data: newSize\r\n            }).then(response => {\r\n                this.messageResponse = response.data\r\n                alert(response.data)\r\n            })\r\n        }\r\n    }\r\n\r\n    this.getAllSizes = _ => $http.get('/api/sizes').then(response => {\r\n        this.sizeList = response\r\n        let concatData = response.data.map(e => {\r\n            e.width = e.width / 1\r\n            e.height = e.height / 1\r\n            e.width > e.height ? e.orientation = \"Landscape\" : e.orientation = \"Portrait\"\r\n            e.width === e.height ? e.orientation = \"Square\" : null\r\n            return e\r\n        })\r\n        return concatData.sort((a, b) => {\r\n            let typeA = a.width\r\n            let typeB = b.width\r\n            if (typeA < typeB) {\r\n                return -1;\r\n            }\r\n            if (typeA > typeB) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n    })\r\n\r\n    this.deleteSize = (id, cb) => {\r\n        $http({\r\n            url: '/api/sizes/' + id,\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            this.messageResponse = response.data\r\n            alert(response.data)\r\n            cb()\r\n        })\r\n    }\r\n})"]}